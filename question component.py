import requests
import html
import random
import time
import json




name = ""
money = 0
question_number = "0"
quit = ""
answer_check = False
checkpoint_money = 0

def incorrect(answer, correct_answer):

    time.sleep(1)
    print("You have answered with... \n{}!" .format(answer))
    time.sleep(2)
    print("Sorry! You have been disqualified! The right answer was... \n{}! \U0001F614".format(correct_answer))
    time.sleep(1)
    print("You lost with ${}!" .format(money))
    if money >= 50:
        print(f"however, since you reached the checkpoint of ${checkpoint_money}, you are able to cash out ${checkpoint_money}! \U0001F604")
        time.sleep(1)
        print("You have cashed out ${}!" .format(checkpoint_money))
        print("We'll see you next time!")
        print("===================================================================\n")
        time.sleep(1)
        exit()
    else:
        print("however, you are unable to cash out any money, due to not making the checkpoint!")
        print("We'll see you next time!")
        time.sleep(1)
        print("===================================================================\n")
        exit()        
    
   
def correct(answer):
    print("You have answered with... \n{}!" .format(answer))
    time.sleep(2)
    print("Congratulations on answering the question correctly!")
    global money
    money += 10
    if money == 500:
        print("Congratulations! You have won $500, {}!".format(name.capitalize()))
        print("Thank you for playing, {}! You have MADE it!".format(name.capitalize()))
        time.sleep(1)
        print("===================================================================\n")
        exit()
        
    elif money % 50 == 0:
        global checkpoint_money
        checkpoint_money += 50
        print("Congratulations! You have passed the {} dollar checkpoint!".format(checkpoint_money))
        time.sleep(1)
        print("Even if you get the next questions wrong, you will still be able to cash out ${}!" .format(checkpoint_money))
        time.sleep(2)
        quit = input("Would you like to quit and cash out now? \n" + "YES / NO\n" + "{}: " .format(name.capitalize())).upper() 
        while quit == "NO":
            break
        else:
            while quit == "YES":
                print("Thank you for playing \"Make It Or Break It\"! \U0001F600")
                time.sleep(1)
                print("You have sucessfully cashed out ${}!" .format(checkpoint_money))
                time.sleep(1)
                exit()
    else:
        print("Your current balance is: ${}!".format(money))
        time.sleep(1)
        quit = input("Would you like to quit and cash out now? \n" + "YES / NO\n" + "{}: " .format(name.capitalize())).upper()
        while quit == "NO":
            break
        else:
            print("Thank you for playing \"Make It Or Break It\"!")
            time.sleep(1)
            print("You have sucessfully cashed out ${}!" .format(money))
            time.sleep(1)
            exit()


while name == "":
        name = input("What is your name? ")

while True:
    try:
        data = requests.get('https://opentdb.com/api.php?amount=1&type=multiple')
        data = json.loads(data.text)
        data = data['results']
        question_type = data[0]['type'] 
        question = data[0]['question'] #Take value question from the list
        question = html.unescape(question) #Turns html entities into unicode symbols
        if question_type == 'multiple': #Multiple choice type questions
            correct_answer = html.unescape(str(data[0]['correct_answer'])) #Takes the corrrect answer string varaible from the list generated by the api
            incorrect_answers = data[0]['incorrect_answers'] #Takes the incorrect answers list varaible from the api
            answers = incorrect_answers 
            answers.append(correct_answer) #Creates a new list called answers containing both correct and incorrect answers
            random.shuffle(answers) #Randomises the values inside the list
            for i in range(len(answers)): #Turns html entities into unicode symbols for all answers
                answers[i] = html.unescape(answers[i])

    except requests.exceptions.RequestException:
        print('Connection Error')

    while not answer_check:
        print(question)
        print(f"A. {answers[0]}\nB. {answers[1]}\nC. {answers[2]}\nD. {answers[3]}")
        answer = input("{}: " .format(name.capitalize())).upper()
        if answer.lower() != 'a' and answer.lower() != 'b' and answer.lower() != 'c' and answer.lower() != 'd':
            print('That is an invalid answer.')
        else:
            answer_check = True

    if answer.lower() == 'a':
        if answers[0] == correct_answer:
            correct(answer)
        else:
            incorrect(answer, correct_answer)

    if answer.lower() == 'b':
        if answers[1] == correct_answer:
            correct(answer)
        else:
            incorrect(answer, correct_answer)

    if answer.lower() == 'c':
        if answers[2] == correct_answer:
            correct(answer)
        else:
            incorrect(answer, correct_answer)

    if answer.lower() == 'd':
        if answers[3] == correct_answer:
            correct(answer)
        else:
            incorrect(answer, correct_answer)
    answer_check = False
